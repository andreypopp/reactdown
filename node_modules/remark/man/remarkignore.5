.TH "REMARKIGNORE" "5" "April 2016" "4.2.1" "remark manual"
.SH "NAME"
\fBremarkignore\fR - remark ignore files
.SH "SYNOPSIS"
.P
\fB.remarkignore\fR
.SH "DESCRIPTION"
.P
When \fBremark\fR(1) searches for applicable files, you can tell it to ignore certain globs by placing an \fI.remarkignore\fR file in the current working directory or its ancestral directories.
.P
Unlike \fBremarkrc\fR(5) configuration files, \fBremarkignore\fR(5) files do not cascade: when one is found (or given), the program stops looking for further files.
.SH "FILES"
.P
Each line in a \fBremarkignore\fR(5) file provides a pattern which describes to \fBremark\fR whether to process a given path.
.RS 0
.IP \(bu 4
Lines are trimmed of white space;
.IP \(bu 4
Empty lines are ignored;
.IP \(bu 4
Lines which start with an octothorp (\fB\[sh]\fR) are ignored;
.IP \(bu 4
Lines which start with a interrogation-mark (\fB!\fR) negate, thus re-adding an ignored file path;
.RE 0

.P
For documentation on support of wild-cards (\fB*\fR, \fB?\fR), brace expressions (\fB\[lC]one,two\[rC]\fR), and more, see \fB\fBminimatch\fR\fR \fI\(lahttps:\[sl]\[sl]github.com\[sl]isaacs\[sl]minimatch\(ra\fR.
.P
You can pass a \fBgitignore\fR(5) file to \fBremark\fR(1), because it has the same format as \fBremarkignore\fR(5):
.P
.RS 2
.nf
remark --ignore-path .gitignore
.fi
.RE
.P
\fBremark\fR(1) searches for files with \fI.md\fR, \fI.mkd\fR, \fI.mkdn\fR, \fI.mkdown\fR, \fI.markdown\fR, or \fI.ron\fR as extension. Other files can be explicitly provided to \fBremark\fR(1), or an \fBextension\fR can be given to \fBremark\fR(1) using the \fB--extension, -e\fR flag.
.P
Besides patterns in \fBremarkignore\fR(5) files, \fInode\[ul]modules\[sl]**\fR are always excluded.
.P
Unless provided directly to \fBremark\fR(1), hidden directories (such as \fI.git\fR) are excluded.
.SH "BUGS"
.P
\fI\(lahttps:\[sl]\[sl]github.com\[sl]wooorm\[sl]remark\[sl]issues\(ra\fR
.SH "SEE ALSO"
.P
\fBremark\fR(1), \fBremarkrc\fR(5), \fBgitignore\fR(5), \fBremarkconfig\fR(7), \fBremarksetting\fR(7)
